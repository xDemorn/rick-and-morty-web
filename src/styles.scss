@use '~@angular/material' as mat;

@import '~@angular/material/theming';

@include mat.core();

$app-primary: mat-palette($mat-purple);
$app-accent:  mat-palette($mat-blue);
$app-warn:    mat-palette($mat-red);
$app-success: mat-palette($mat-grey);

// Create the theme object (a Sass map containing all of the palettes).
$app-theme: mat-light-theme($app-primary, $app-accent, $app-warn);

$primary: map-get($app-theme, primary);
$accent: map-get($app-theme, accent);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($app-theme);

// Define a light theme
$light-primary: mat.define-palette(mat.$indigo-palette);
$light-accent: mat.define-palette(mat.$pink-palette);
$light-theme: mat.define-light-theme((
 color: (
   primary: $light-primary,
   accent: $light-accent,
 )
));

// Define a dark theme
$dark-primary: mat.define-palette(mat.$purple-palette);
$dark-accent: mat.define-palette(mat.$blue-gray-palette);
$dark-theme: mat.define-dark-theme((
 color: (
   primary: $dark-primary,
   accent: $dark-accent,
 )
));

// Apply the dark theme by default
@include mat.core-theme($light-theme);
@include mat.button-theme($light-theme);

@include mat.all-component-themes($light-theme);

// Apply the light theme only when the `.my-light-theme` CSS class is applied
// to an ancestor element of the components (such as `body`).
.dark-mode-theme {
    @include mat.core-color($dark-theme);
    @include mat.button-color($dark-theme);
    @include mat.all-component-themes($dark-theme);
}

/* You can add global styles to this file, and also import other style files */
$grid-gap: 16px;

.characters, .episodes {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    row-gap: $grid-gap;
    column-gap: $grid-gap;
    width: 100%;
    padding: 12px;
    // background-color: red;

    mat-card {

        mat-card-header {

            mat-card-title {
                color: mat-color($app-primary);
            }

            mat-card-subtitle {
                display: flex;
                align-items: center;
                justify-content: flex-start;

                span {
                    margin-left: 4px;
                }
            }
        }

        mat-card-content {
            .row {
                display: flex;
                flex-direction: column;
                margin-bottom: 8px;

                span:first-child {
                    color: mat-color($app-success);
                    font-size: 1.5em;
                }

                div {
                    display: flex;
                    flex-direction: row;
                    align-items: center;
                }
            }
        }
    }
}

.status-icon {
    height: 16px;
    width: 16px;
    border-radius: 50%;
    margin-right: 8px;
}

.alive {
    background-color: green;
}

.dead {
    background-color: red;
}

.unknown {
    background-color: grey;
}

.filters {
    display: flex;
    flex-direction: row;
    width: 100%;

    .filter {
        flex: 1 1 auto;
        margin-left: 8px;
        margin-right: 8px;

        &:first-child {
            margin-left: 0;
        }

        &:last-child {
            margin-right: 0;
        }
    }

    .actions {
        display: flex;
        flex: 0 1 auto;
        align-items: center;
        justify-content: center;
        padding-bottom: 21.5px;
    }
}

.pagination {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    margin-top: 16px;

    .middle {
        margin-left: 8px;
        margin-right: 8px;
    }
}

* {
    font-family: 'Rubik', sans-serif;
}

html, body {
    height: 100vh;
}

body {
    margin: 0;
    padding: 0;
}

p {
    margin: 0;
}

.spacer {
    flex: 1 1 auto;
}

.special-word {
    color: yellowgreen;
}

.tp-big-text {
    font-size: 16px;
}